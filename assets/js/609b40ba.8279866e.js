"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3799],{4198:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});var i=t(4848),o=t(8453);const l={sidebar_position:5},r="Deployment",s={id:"Build/Deployment",title:"Deployment",description:"Introduce systemd management configs.",source:"@site/docs/Build/Deployment.md",sourceDirName:"Build",slug:"/Build/Deployment",permalink:"/docs/Build/Deployment",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Build/Deployment.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Compile and Run",permalink:"/docs/Build/Compile and Run"},next:{title:"JSON-RPC",permalink:"/docs/Build/Json-RPC"}},c={},a=[{value:"Hardware",id:"hardware",level:2},{value:"Minimum",id:"minimum",level:3},{value:"Recommended",id:"recommended",level:3},{value:"Network &amp; Port",id:"network--port",level:3},{value:"Chain Node",id:"chain-node",level:2},{value:"Start Bash",id:"start-bash",level:2},{value:"systemd config",id:"systemd-config",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsx)(n.p,{children:"Introduce systemd management configs."}),"\n",(0,i.jsx)(n.h2,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsx)(n.h3,{id:"minimum",children:"Minimum"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"8core\n16g\nssd iops>5k\n"})}),"\n",(0,i.jsx)(n.h3,{id:"recommended",children:"Recommended"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"16core\n32g\nssd iops>5k\n"})}),"\n",(0,i.jsx)(n.h3,{id:"network--port",children:"Network & Port"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"External IP Address\nPort TCP/UDP 31031\n"})}),"\n",(0,i.jsx)(n.h2,{id:"chain-node",children:"Chain Node"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"config.toml"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'[Eth]\nSyncMode = "snap"\nTrieCleanCacheRejournal= 300000000000\nTrieTimeout = 20000000000\n\n\n[Eth.Miner]\nGasFloor = 40000000\nGasCeil = 40000000\nGasPrice = 100000000\nRecommit = 3000000000\n\n\n[Eth.TxPool]\nNoLocals = true\nJournal = "transactions.rlp"\nRejournal = 600000000000\nPriceLimit = 100000000\nPriceBump = 10\nAccountSlots = 64\nGlobalSlots = 10240\nAccountQueue = 32\nGlobalQueue = 1024\nLifetime = 1800000000000\n\n[Node]\nDataDir = "/data/bitlayer-l2/chain/data"\nInsecureUnlockAllowed = true\nNoUSB = true\nIPCPath = "geth.ipc"\nHTTPHost = "0.0.0.0"\nHTTPPort = 8545\nHTTPCors = ["*"]\nHTTPVirtualHosts = ["*"]\nHTTPModules = [\'eth\', \'net\', \'web3\']\n\nWSHost = "0.0.0.0"\nWSPort = 8546\nWSModules = [\'eth\', \'net\', \'web3\']\n\nGraphQLVirtualHosts = ["localhost"]\n\n\n[Node.P2P]\nMaxPeers = 50\nNoDiscovery = false\nListenAddr = ":31031"\nEnableMsgEvents = false\n\n[Node.HTTPTimeouts]\nReadTimeout = 30000000000\nWriteTimeout = 30000000000\nIdleTimeout = 120000000000\n'})}),"\n",(0,i.jsx)(n.p,{children:"use snap sync in the config, if full needed - change this line"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'SyncMode = "snap"\n'})}),"\n",(0,i.jsx)(n.p,{children:"to"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'SyncMode = "full"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"start-bash",children:"Start Bash"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["To show full detail help info of all flags, type ",(0,i.jsx)(n.code,{children:"geth help"})," or ",(0,i.jsx)(n.code,{children:"geth -h"})]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"run.sh"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"#!/usr/bin/env bash\n/data/bitlayer-l2/chain/geth-linux-amd64 \\\n--config /data/bitlayer-l2/chain/config.toml  \\\n--log.file /data/bitlayer-l2/chain/logs/chain.log \\\n--log.rotate=true \\\n--authrpc.port 8445 \\\n--traceaction 2 \\\n--verbosity 3  >> /data/bitlayer-l2/chain/logs/systemd_chain_console.out 2>&1\n"})}),"\n",(0,i.jsx)(n.p,{children:"if you need to use it as archive node, add:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"--syncmode full \\\n--gcmode archive \\\n"})}),"\n",(0,i.jsx)(n.p,{children:"so:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"#!/usr/bin/env bash\n/data/bitlayer-l2/chain/geth-linux-amd64 \\\n--config /data/bitlayer-l2/chain/config.toml  \\\n--log.file /data/bitlayer-l2/chain/logs/chain.log \\\n--log.rotate=true \\\n--authrpc.port 8445 \\\n--traceaction 2 \\\n--syncmode full \\\n--gcmode archive \\\n--verbosity 3  >> /data/bitlayer-l2/chain/logs/systemd_chain_console.out 2>&1\n"})}),"\n",(0,i.jsx)(n.p,{children:"If no network flags were provided, the node will connect the bitlayer mainnet by default. If you want to connect to bitlayer testnet, add:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"--testnet\n"})}),"\n",(0,i.jsx)(n.h2,{id:"systemd-config",children:"systemd config"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[Unit]\nDescription=bitlayer-l2 chain service\n\n[Service]\nType=simple\nExecStart=/bin/sh /data/bitlayer-l2/chain/run.sh\nWorkingDirectory=/data/bitlayer-l2/chain\nTimeoutSec=600\nRestart=on-failure\nRestartSec=5s\n\nLimitNOFILE=65536\n\n[Install]\nWantedBy=multi-user.target\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(6540);const o={},l=i.createContext(o);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);